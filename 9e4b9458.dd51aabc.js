(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{120:function(e,t,n){"use strict";var a=n(0),o=n.n(a),l=n(117),c=n(102),i=n(63),r=n.n(i),b=37,s=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,d=e.values,p=e.groupId,m=e.className,u=Object(l.a)(),h=u.tabGroupChoices,j=u.setTabGroupChoices,O=Object(a.useState)(i),g=O[0],k=O[1],N=a.Children.toArray(e.children);if(null!=p){var w=h[p];null!=w&&w!==g&&d.some((function(e){return e.value===w}))&&k(w)}var f=function(e){k(e),null!=p&&j(p,e)},v=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},m)},d.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(c.a)("tabs__item",r.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return v.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case s:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(v,e.target,e)},onFocus:function(){return f(t)},onClick:function(){f(t)}},n)}))),t?Object(a.cloneElement)(N.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},121:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return o.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return u}));var a=n(3),o=n(7),l=(n(0),n(105)),c=n(106),i=n(120),r=n(121),b=["components"],s={id:"godwoken",title:"Godwoken",sidebar_label:"Godwoken"},d={unversionedId:"introduction/godwoken",id:"introduction/godwoken",isDocsHomePage:!1,title:"Godwoken",description:"Overview",source:"@site/docs\\introduction\\overview.md",slug:"/introduction/godwoken",permalink:"/ckb_sdk/docs/introduction/godwoken",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/introduction/overview.md",version:"current",sidebar_label:"Godwoken",sidebar:"sidebar2",previous:{title:"ckb-sdk-java",permalink:"/ckb_sdk/docs/introduction/overview_java"},next:{title:"Deploy Godwoken",permalink:"/ckb_sdk/docs/introduction/deploy"}},p=[{value:"Overview",id:"overview",children:[{value:"Godwoken Decentralization Roadmap",id:"godwoken-decentralization-roadmap",children:[]},{value:"Godwoken Nodes",id:"godwoken-nodes",children:[]},{value:"Deployment",id:"deployment",children:[]}]},{value:"Deploy a Godwoken Chain with Polyjuice by Using Godwoken-Kicker",id:"deploy-a-godwoken-chain-with-polyjuice-by-using-godwoken-kicker",children:[]},{value:"Deploy Godwoken Manually",id:"deploy-godwoken-manually",children:[{value:"Environment",id:"environment",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Steps",id:"steps",children:[]}]},{value:"Project Examples",id:"project-examples",children:[]},{value:"References",id:"references",children:[]}],m={toc:p};function u(e){var t=e.components,n=Object(o.a)(e,b);return Object(l.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"overview"},"Overview"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Godwoken")," is a layer 2 rollup framework for Nervos CKB. It provides scaling capabilities with rollups that perform transaction execution outside CKB chain."),Object(l.b)("p",null,"Godwoken supports optimistic rollups that can use the always success script or ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/clerkb"},"Proof of Authority")," to issue layer 2 blocks. When POA is used, limited ",Object(l.b)("inlineCode",{parentName:"p"},"block_producers")," can issue layer 2 blocks. For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken/blob/master/docs/life_of_a_godwoken_transaction.md#life-of-a-godwoken-transaction"},"Life of a Godwoken transaction"),"."),Object(l.b)("p",null,"When Godwoken is deployed with Polyjuice, it also supports porting Ethereum DApps to CKB. Polyjuice is an Ethereum compatible layer that allows Solidity based smart contracts to run on Nervos CKB. Polyjuice uses ",Object(l.b)("a",{parentName:"p",href:"https://github.com/ethereum/evmone"},"evmone")," as the EVM implementation in both ",Object(l.b)("inlineCode",{parentName:"p"},"generator")," and ",Object(l.b)("inlineCode",{parentName:"p"},"validator"),". It accepts Ethereum transactions and executes the transactions in EVM. For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-polyjuice"},"Polyjuice for Godwoken")," and ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken/blob/master/docs/life_of_a_polyjuice_transaction.md"},"Life of a Polyjuice Transaction"),". "),Object(l.b)("p",null,"For more information about the deployment of Godwoken, see the sections of ",Object(l.b)("a",{parentName:"p",href:"godwoken#deploy-a-godwoken-chain-with-polyjuice-by-using-godwoken-kicker"},"Deploy a Godwoken chain with Polyjuice by Using Godwoken-Kicker")," and ",Object(l.b)("a",{parentName:"p",href:"godwoken#deploy-godwoken-manually"},"Deploy Godwoken Manually"),"."),Object(l.b)("h3",{id:"godwoken-decentralization-roadmap"},"Godwoken Decentralization Roadmap"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 1")," (up to the mainnet release): The sequencer is the only validator. Godwoken supports to view rollups and find out whether there is any invalid commit in a rollup.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 2")," (after the mainnet release): Godwoken will introduce permission-less validators. Then, everyone can run a validator to view rollups. If the sequencer commits an invalid state, a challenge will be processed, and the sequencer will lose staked assets on layer1. If the sequencer stops working, everyone can run a block producer to process the withdrawal from the rollup."),Object(l.b)("p",{parentName:"li"},"The target of stage 2 is to reach the same decentralization level as popular rollup projects such as Arbitrum.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 3"),": Multiple sequencers will be investigated and explored."))),Object(l.b)("h3",{id:"godwoken-nodes"},"Godwoken Nodes"),Object(l.b)("p",null,"Godwoken works by using ",Object(l.b)("strong",{parentName:"p"},"aggregator")," nodes. "),Object(l.b)("p",null,"The nodes are used to:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Collect specially designed layer 2 transactions."),Object(l.b)("li",{parentName:"ol"},"Pack the special transactions into CKB transactions that can also be considered as layer 2 blocks."),Object(l.b)("li",{parentName:"ol"},"Submit the CKB transactions to layer 1 for acceptance. ",Object(l.b)("strong",{parentName:"li"},"m")," of ",Object(l.b)("strong",{parentName:"li"},"n")," multisig keys are used to deploy on-chain cells to layer 1. Every update needs to be verified by the holders of the keys.")),Object(l.b)("img",{src:Object(c.a)("img/godwoken.png"),width:"70%"}),Object(l.b)("p",null,"Godwoken nodes have three modes:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"fullnode")," mode: The Godwoken nodes in fullnode mode verify new blocks and transactions, relay blocks and transactions. The nodes are the verifiers of the network."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"In the current stage, Godwoekn supports one single central node for producing blocks. To use fullnode mode Godwoken, a local DEV chain must be deployed for the development.")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"readonly")," mode: By default, a deployment can deploy two readonly Godwoken nodes. The two readonly nodes can synchronize the data of testnet or mainnet for queries.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"test")," mode: Test mode is used for Godwoken internal test purpose."))),Object(l.b)("h3",{id:"deployment"},"Deployment"),Object(l.b)("p",null,"Two deployment methods are provided for deploying a Godwoken chain with Polyjuice to fulfill different deployment requirements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Deploy a Godwoken chain with Polyjuice by using Godwoken-kicker"),Object(l.b)("p",{parentName:"li"},"Godwoken-kicker is a one line command to start a Godwoken chain with Polyjuice on ",Object(l.b)("strong",{parentName:"p"},"Devnet"),". This deployment method can help developers deploy Ethereum contracts and migrate Ethereum DApps to CKB Devnet quickly in testing and development environments.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Deploy a Godwoken chain with Polyjuice manually"),Object(l.b)("p",{parentName:"li"},"This deployment method is useful in situations such as deploying a Godwoken chain with Polyjuice on ",Object(l.b)("strong",{parentName:"p"},"Testnet")," or ",Object(l.b)("strong",{parentName:"p"},"Mainnet"),"."))),Object(l.b)("h2",{id:"deploy-a-godwoken-chain-with-polyjuice-by-using-godwoken-kicker"},"Deploy a Godwoken Chain with Polyjuice by Using Godwoken-Kicker"),Object(l.b)("p",null,"Godwoken-kicker provides a quick mode and a custom mode for the deployment."),Object(l.b)(i.a,{defaultValue:"quick",values:[{label:"Quick Mode",value:"quick"},{label:"Custom Mode",value:"custom"}],mdxType:"Tabs"},Object(l.b)(r.a,{value:"quick",mdxType:"TabItem"},Object(l.b)("p",null,"The quick mode is fast and simple. It executes the builds of all components from prebuilt docker images."),Object(l.b)("b",null,"Environment"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,"Ubuntu 20.04 LTS"))),Object(l.b)("b",null,"Prerequisites"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/engine/install/ubuntu/"},"Docker\xa0Engine")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/compose/install/"},"Docker\xa0Compose")))),Object(l.b)("p",null,Object(l.b)("b",null,"Steps")),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Clone the source of Godwoken-kicker."),Object(l.b)("p",null,"If the source is already cloned, skip this step and go to the next step directly."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/RetricSu/godwoken-kicker.git\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Initialize Godwoken-kicker."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Stop any running Godwoken chain by using the ",Object(l.b)("code",null,"make stop")," command before initializing Godwoken-kicker."))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-kicker\n$ make init\n")),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make init")," command can be used in the following situations:"),Object(l.b)("ul",null,Object(l.b)("li",null,"It is the first time to start the chain."),Object(l.b)("li",null,"The deployment mode is changed."),Object(l.b)("li",null,"The CKB chain data and all layer 1 related cache data are deleted."))),Object(l.b)("li",null,Object(l.b)("p",null,"Start the Godwoken chain."),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make start")," command can be used to start the deployed Godwoken chain. If there is no chain deployed, the ",Object(l.b)("code",null,"make start -f")," command can be used for a force start that deploys and starts a new Godwoken chain."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make start\n")),Object(l.b)("details",null,Object(l.b)("summary",null,"Output"),Object(l.b)("p",null,Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"Building ckb\nBuilding polyjuice\nBuilding call-polyman\nBuilding godwoken\nBuilding web3\nStarting docker_postgres_1 ... done\nStarting docker_ckb_1      ... done\nStarting docker_polyjuice_1    ... done\nStarting docker_call-polyman_1 ... done\nStarting docker_indexer_1      ... done\nStarting docker_godwoken_1     ... done\nStarting docker_web3_1         ... done\n\nRun commands to monitor background activities: \n\n    make sg (Godwoken)\n    make sp (Polyjuice)\n    make web3 (web3)\n    make call-polyman (setup service)\n\nAll Jobs Done       : [########################################] 100%\n\nGreat! Checkout http://localhost:6100 to deploy contract!\n"))))),Object(l.b)("li",null,Object(l.b)("p",null,"Set up an Ethereum wallet."),Object(l.b)("p",null,"In this example, a MetaMask (an Ethereum Wallet) wallet is set up for the deployment. Add the MetaMask extension in the browser (Firefox, Google Chrome, Brave or Microsoft Edge.) and create an account for the wallet."),Object(l.b)("p",null,"If there is a MetaMask wallet ready to be used, skip this step and go to the next step directly.")),Object(l.b)("li",null,"When the Godwoken chain is started successfully, open the website at ",Object(l.b)("a",null,"http://localhost:6100")," and connect the MetaMask wallet by clicking the ",Object(l.b)("b",null,"Connect Wallet")," button."),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy an ETH contract to the Godwoken chain."),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Prepare and compile an ETH contract.")),Object(l.b)("li",null,"Deposit 400 CKB to the ETH wallet on the ",Object(l.b)("b",null,"ACCOUNTS")," page of the Godwoken chain."),Object(l.b)("li",null,"Deploy the ETH contract that you have compiled on the ",Object(l.b)("b",null,"CONTRACT")," page of the Godwoken chain."))))),Object(l.b)(r.a,{value:"custom",mdxType:"TabItem"},Object(l.b)("p",null,"The custom mode is more flexible for custom requirements. It can build the components from local packages and executes the builds locally."),Object(l.b)("b",null,"Environment"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,"Ubuntu 20.04 LTS"))),Object(l.b)("b",null,"Prerequisites"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/engine/install/ubuntu/"},"Docker Engine")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/compose/install/"},"Docker Compose")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://github.com/nervosnetwork/molecule"},"Moleculec")),Object(l.b)("li",null,"Rustup nightly"))),Object(l.b)("p",null,Object(l.b)("b",null,"Steps")),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Clone the source of Godwoken-kicker."),Object(l.b)("p",null,"If the source is already cloned, skip this step and go to the next step directly."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/RetricSu/godwoken-kicker.git\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Set the mode with ",Object(l.b)("code",null,"true")," under the ",Object(l.b)("code",null,"[mode]")," section in the ",Object(l.b)("code",null,"/docker/.build.mode.env")," file for the components that you want to build from local packages."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:'language-title="/docker/.build.mode.env"'},"####[mode]\nMANUAL_BUILD_GODWOKEN=false\nMANUAL_BUILD_WEB3=false\nMANUAL_BUILD_SCRIPTS=false\nMANUAL_BUILD_POLYJUICE=false\n...\n")),Object(l.b)("p",null,"(Optional) Configure component version under the ",Object(l.b)("code",null,"[packages]")," section in the ",Object(l.b)("code",null,"docker/.build.mode.env")," file."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:'language-title="/docker/.build.mode.env"'},"####[packages]\nGODWOKEN_GIT_URL=https://github.com/nervosnetwork/godwoken.git\nGODWOKEN_GIT_CHECKOUT=master\nPOLYMAN_GIT_URL=https://github.com/RetricSu/godwoken-polyman.git\nPOLYMAN_GIT_CHECKOUT=master\nWEB3_GIT_URL=https://github.com/nervosnetwork/godwoken-web3.git\nWEB3_GIT_CHECKOUT=main\n...\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Initialize Godwoken-kicker."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Stop any running Godwoken chain by using the ",Object(l.b)("code",null,"make stop")," command before initializing Godwoken-kicker."))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-kicker\n$ make init\n")),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make init")," command can be used in the following situations:"),Object(l.b)("ul",null,Object(l.b)("li",null,"It is the first time to start the chain."),Object(l.b)("li",null,"The deployment mode is changed."),Object(l.b)("li",null,"The CKB chain data and all layer 1 related cache data are deleted."))),Object(l.b)("li",null,Object(l.b)("p",null,"Start the Godwoken chain."),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make start")," command can be used to start the deployed Godwoken chain. If there is no chain deployed, the ",Object(l.b)("code",null,"make start -f")," command can be used for a force start that deploys and starts a new Godwoken chain. "),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make start\n")),Object(l.b)("details",null,Object(l.b)("summary",null,"Output"),Object(l.b)("p",null,Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"Building ckb\nBuilding polyjuice\nBuilding call-polyman\nBuilding godwoken\nBuilding web3\nStarting docker_postgres_1 ... done\nStarting docker_ckb_1      ... done\nStarting docker_polyjuice_1    ... done\nStarting docker_call-polyman_1 ... done\nStarting docker_indexer_1      ... done\nStarting docker_godwoken_1     ... done\nStarting docker_web3_1         ... done\n\nRun commands to monitor background activities: \n\n    make sg (Godwoken)\n    make sp (Polyjuice)\n    make web3 (web3)\n    make call-polyman (setup service)\n\nAll Jobs Done       : [########################################] 100%\n\nGreat! Checkout http://localhost:6100 to deploy contract!\n"))))),Object(l.b)("li",null,Object(l.b)("p",null,"Set up an Ethereum wallet."),Object(l.b)("p",null,"In this example, a MetaMask (an Ethereum Wallet) wallet is set up for the deployment. Add the MetaMask extension in the browser (Firefox, Google Chrome, Brave or Microsoft Edge.) and create an account for the wallet."),Object(l.b)("p",null,"If there is a MetaMask wallet ready to be used, skip this step and go to the next step directly.")),Object(l.b)("li",null,Object(l.b)("p",null,"When the Godwoken chain is started successfully, open the website at ",Object(l.b)("a",null,"http://localhost:6100")," and connect the MetaMask wallet by clicking the ",Object(l.b)("b",null,"Connect Wallet")," button.")),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy an ETH contract to the Godwoken chain."),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Prepare and compile an ETH contract.")),Object(l.b)("li",null,Object(l.b)("p",null,"Deposit 400 CKB to the ETH wallet on the ",Object(l.b)("b",null,"ACCOUNTS")," page of the Godwoken chain.")),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy the ETH contract that you have compiled on the ",Object(l.b)("b",null,"CONTRACT")," page of the Godwoken chain."))))))),Object(l.b)("p",null,"For more information about the Godwoken-kicker commands, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/RetricSu/godwoken-kicker"},"godwoken-kicker"),"."),Object(l.b)("h2",{id:"deploy-godwoken-manually"},"Deploy Godwoken Manually"),Object(l.b)("h3",{id:"environment"},"Environment"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"OS: Ubuntu 20.04")),Object(l.b)("h3",{id:"prerequisites"},"Prerequisites"),Object(l.b)("p",null,"The following tools need to be installed before entering the deployment process:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Yarn (version 1.22.5 or above)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"GCC and make"),Object(l.b)("p",{parentName:"li"},"To install ",Object(l.b)("inlineCode",{parentName:"p"},"GCC")," and ",Object(l.b)("inlineCode",{parentName:"p"},"make")," on Ubuntu 20.04, run the following command as root or user with sudo privileges:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt update\n$ sudo apt install build-essential\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/capsule/releases/tag/v0.4.6"},"Capsule v0.4.6"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/molecule"},"Moleculec v0.6.1")),Object(l.b)("p",{parentName:"li"},"To install Moleculec 0.6.1:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cargo install moleculec --version 0.6.1\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Rustup nightly")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Docker"),Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Docker")," must be installed for building and deploying Godwoken. For more information about Docker installation, see ",Object(l.b)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/ubuntu/"},"Install Docker Engine on Ubuntu"),"."),Object(l.b)("p",{parentName:"li"},"To manage Docker as a non-root user, see the Docker documentations of ",Object(l.b)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/"},"Manage Docker as a non-root user"),".")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"A CKB node must be installed and running on DEV chain or Testnet. It can be installed by using Tippy. For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/reference/ckbnode#install-a-ckb-node-by-using-tippy"},"Install a CKB Node by Using Tippy"),". The verified Tippy version in this documentation is ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/tippy/releases/tag/v0.2.1"},"v0.2.1"),".")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"ckb-cli: The ckb-cli tool is used for deploying smart contracts. It can be installed from a ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases"},"CKB prebuilt installer package"),". The verified ckb-cli version in this documentation is ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases/tag/v0.40.0"},"v0.40.0"),"."))),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The current user must have permissions to run ckb-cli, Capsule, Moleculec and docker. If the execution of these tools requires sudo commands, that may cause issues during the deployment process."))),Object(l.b)("h3",{id:"steps"},"Steps"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create a CKB account for the deployment."),Object(l.b)("p",{parentName:"li"},"For more information about CKB accounts and creating CKB accounts, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/reference/ckbaccount"},"CKB Accounts and Capacity"),"."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"address:\n  mainnet: ckb1qyqpadsep7yruydz5eaulty4xwc2sn6smhashalnjx\n  testnet: ckt1qyqpadsep7yruydz5eaulty4xwc2sn6smhas2cpv76\nlock_arg: 0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb\nlock_hash: 0x499aa230ded32812a246778bc718f4d61a47497c1b7352211d241d2ad333ed75\npk: 0xca02cc4b8e0e447e243204dd2e16a1692026bfdd4add502b203975999d3a6909\n")),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The account information in this documentation is only used for demonstration. Do ",Object(l.b)("strong",{parentName:"p"},"not")," use these private keys, addresses and args elsewhere.")))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the CKB node and the CKB miner."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Launch the Tippy dashboard."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd tippy-linux-x64\n$ ./Tippy\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the CKB node and the CKB miner on the Tippy dashboard.")))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone the Godwoken source."),Object(l.b)("p",{parentName:"li"},"Open a new terminal window and run the following command to clone the Godwoken source:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone --recursive https://github.com/nervosnetwork/godwoken\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Prepare a ",Object(l.b)("inlineCode",{parentName:"p"},"pk")," file and a ",Object(l.b)("inlineCode",{parentName:"p"},"scripts-build.json")," file under the ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy")," folder."),Object(l.b)("p",{parentName:"li"},"The ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/pk")," file stores the private key that is used to deploy Godwoken."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:'language-title="/godwoken/deploy/pk"'},"0xca02cc4b8e0e447e243204dd2e16a1692026bfdd4add502b203975999d3a6909\n")),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The private key in this documentation is only used for demonstration. Do ",Object(l.b)("strong",{parentName:"p"},"not")," use this private key elsewhere."))),Object(l.b)("p",{parentName:"li"},"The ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/scripts-build.json")," file specifies the pre-built docker image of Godwoken and the repositories of the other components like godwoken_scripts, godwoken_polyjuice and clerkb."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="/godwoken/deploy/scripts-build.json"',title:'"/godwoken/deploy/scripts-build.json"'},'{\n    "prebuild_image": "nervos/godwoken-prebuilds:<tag>",\n    "repos": {\n        "godwoken_scripts": "https://github.com/nervosnetwork/godwoken-scripts#master",\n        "godwoken_polyjuice": "https://github.com/nervosnetwork/godwoken-polyjuice#main",\n        "clerkb": "https://github.com/nervosnetwork/clerkb#v0.4.0"\n    }\n}\n')),Object(l.b)("p",{parentName:"li"},"For more information about the tags of the pre-buildt docker image, see ",Object(l.b)("a",{parentName:"p",href:"https://hub.docker.com/r/nervos/godwoken-prebuilds/tags?page=1&ordering=last_updated"},"https://hub.docker.com/r/nervos/godwoken-prebuilds/tags?page=1&ordering=last_updated"),"."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="/godwoken/deploy/scripts-build.json"',title:'"/godwoken/deploy/scripts-build.json"'},'{\n    "prebuild_image": "nervos/godwoken-prebuilds:v0.6.1",\n    "repos": {\n        "godwoken_scripts": "https://github.com/nervosnetwork/godwoken-scripts#master",\n        "godwoken_polyjuice": "https://github.com/nervosnetwork/godwoken-polyjuice#main",\n        "clerkb": "https://github.com/nervosnetwork/clerkb#v0.4.0"\n    }\n} \n'))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set up Godwoken nodes."),Object(l.b)("p",{parentName:"li"},"The setup command for setting up Godwoken nodes is as follows:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ RUST_LOG=info cargo +nightly run --bin gw-tools -- setup --cells-lock-address <CKB-address> -s deploy/scripts-build.json -k deploy/pk -o deploy/\n")),Object(l.b)("p",{parentName:"li"},"To set up Godwoken nodes with the CKB address of the deployment cells owner: "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken\n$ RUST_LOG=info cargo +nightly run --bin gw-tools -- setup --cells-lock-address ckt1qyqpadsep7yruydz5eaulty4xwc2sn6smhas2cpv76 -s deploy/scripts-build.json -k deploy/pk -o deploy/\n")),Object(l.b)("p",{parentName:"li"},"This setup command compiles Godwoken scripts, deploys the scripts and layer 2 genesis blocks, and generates configuration files. "),Object(l.b)("p",{parentName:"li"},"After the setup command is completed, a ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," file is generated under ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/node1")," and ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/node2"),", and a ",Object(l.b)("inlineCode",{parentName:"p"},"scripts-deploy-result.json")," file is generated under ",Object(l.b)("inlineCode",{parentName:"p"},"godwoken/deploy"),"."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"If an error about failing to obtain the ",Object(l.b)("a",{href:"https://raw.githubusercontent.com/nervosnetwork/godwoken/2221efdfcf06351fa1884ea0f2df1604790c3378/crates/types/schemas/godwoken.mol"},"\xa0godwoken.mol")," and ",Object(l.b)("a",{href:"https://raw.githubusercontent.com/nervosnetwork/godwoken/2221efdfcf06351fa1884ea0f2df1604790c3378/crates/types/schemas/blockchain.mol"},"blockchain.mol")," file is encountered during the setup process, try the following workaround to fix the error:"),Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("p",null,"Comment the lines for downloading ",Object(l.b)("code",null,"blockchain.mol")," and ",Object(l.b)("code",null,"godwoken.mol")," in the ",Object(l.b)("code",null,"/godwoken/tmp/scripts-build-dir/godwoken-polyjuice/Makefile")," file.")),Object(l.b)("li",null,Object(l.b)("p",null,"Download the two files manually and copy the files into the ",Object(l.b)("code",null,"/godwoken/tmp/scripts-build-dir/godwoken-polyjuice/build")," folder.")),Object(l.b)("li",null,Object(l.b)("p",null,"Execute the setup command again until it succeeds.")))))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Configure the receiver lock."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Generate the config.json file for the CKB chain."),Object(l.b)("p",{parentName:"li"},"Download the config generator tool, ",Object(l.b)("a",{parentName:"p",href:"https://github.com/classicalliu/lumos-config-generator/releases/download/v0.1.1/lumos-config-generator-linux-amd64"},"lumos-config-generator-linux-amd64")," for Linux platforms."),Object(l.b)("p",{parentName:"li"},"Run the ",Object(l.b)("strong",{parentName:"p"},"lumos-config-generator-linux-amd64")," file to generate the config.json file in the project root directory."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The CKB node must be running when executing the generator to generate the config file."))),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ ./lumos-config-generator-linux-amd64 config.json http://127.0.0.1:8114\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Assign a receiver lock in the node's ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," file. "),Object(l.b)("p",{parentName:"li"},"The code_hash of the receiver lock is the CODE_HASH of the SECP256K1_BLAKE160 script from the config.json file."),Object(l.b)("p",{parentName:"li"},"The args is the lock args of the deployment cells owner."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-toml",metastring:'title="config.toml"',title:'"config.toml"'},"[block_producer.challenger_config.rewards_receiver_lock]\ncode_hash = '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8'\nhash_type = 'type'\nargs = '0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb'\n"))))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the Godwoken nodes."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The default node mode is ",Object(l.b)("inlineCode",{parentName:"p"},"readonly "),". It can be modified in ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," to either ",Object(l.b)("inlineCode",{parentName:"p"},"fullnode")," mode or ",Object(l.b)("inlineCode",{parentName:"p"},"test")," mode."),Object(l.b)("p",{parentName:"div"},"If the two readonly nodes need to be started within the same environment, manually modify the listening port number in the ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," file for each node."))),Object(l.b)("p",{parentName:"li"},"Run the following command to start node1:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ RUST_LOG=info cargo +nightly run --bin godwoken run -c deploy/node1/config.toml\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set up Polyjuice."),Object(l.b)("p",{parentName:"li"},"Clone the source of godwoken-examples. For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-examples"},"godwoken-examples"),"."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone --recursive https://github.com/nervosnetwork/godwoken-examples\n")),Object(l.b)("p",{parentName:"li"},"Then, create an account on Polyjuice. It will take some time to build index for the first time. "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-examples\n$ yarn && yarn run build-all\n$ export SCRIPT_DEPLOY_RESULT_PATH=<Path to scripts-deploy-result.json>\n$ export GODWOKEN_CONFIG_PATH=<Path to godwoken config.toml>\n$ yarn run copy-configs\n$ LUMOS_CONFIG_FILE=config.json node ./packages/tools/lib/account-cli.js deposit -c 40000000000 -p <privkey>\n")),Object(l.b)("p",{parentName:"li"},"For more information about generating the Lumos config file for DEV chain, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/guides/config#step-1-generate-the-configjson-file-for-the-dev-chain"},"Generate the config.json file for the DEV chain"),".")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the web3 server."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create a PostgreSQL instance."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ docker run --name postgres -e POSTGRES_USER=user -e POSTGRES_DB=godwoken -e POSTGRES_PASSWORD=mypassword -d -p 5432:5432 postgres\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone the source of ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-web3"},"godwoken-web3")," that is a Web3 RPC compatible layer build upon Godwoken and Polyjuice."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/nervosnetwork/godwoken-web3\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Prepare the ",Object(l.b)("inlineCode",{parentName:"p"},".env")," file under ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken-web3/packages/api-server"),"."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-web3\n$ cat > ./packages/api-server/.env <<EOF\nDATABASE_URL=postgres://user:password@postgres:5432/godwoken\nGODWOKEN_JSON_RPC=http://godwoken:8119\nETH_ACCOUNT_LOCK_HASH=$EthAccountLockCodeHash\nROLLUP_TYPE_HASH=$RollupTypeHash\nPORT=8024\nCHAIN_ID=1024777\nCREATOR_ACCOUNT_ID=3\nDEFAULT_FROM_ADDRESS=0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb\nPOLYJUICE_VALIDATOR_TYPE_HASH=$PolyjuiceValidatorCodeHash\nL2_SUDT_VALIDATOR_SCRIPT_TYPE_HASH=$L2SudtValidatorCodeHash\nTRON_ACCOUNT_LOCK_HASH=$TronAccountLockCodeHash\nEOF\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the Web3 server."),Object(l.b)("p",{parentName:"li"},"To start the Web3 server properly, make sure to clear the postgres database, and then run the migration SQL file to recreate the tables before running the server:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ yarn\n$ yarn run migrate:latest\n$ yarn run build:godwoken\n$ yarn run start\n"))))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Migrate an existing Ethereum DApp to Polyjuice."))),Object(l.b)("p",null,"For more information and steps to follow, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/TTNguyenDev/Hackathon-Nervos/tree/main/task_12#document-porting-an-existing-ethereum-dapp-to-polyjuice"},"Document Porting An Existing Ethereum DApp To Polyjuice"),"."),Object(l.b)("h2",{id:"project-examples"},"Project Examples"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/Kuzirashi/blockchain-workshop/tree/godwoken-simple"},"godwoken-simple")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/Kuzirashi/blockchain-workshop/tree/godwoken-simple-js"},"godwoken-simple-js"))),Object(l.b)("h2",{id:"references"},"References"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Resource"),Object(l.b)("th",{parentName:"tr",align:null},"Link"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Nervos","\xa0","Document","\xa0","Website"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://docs.nervos.org/"},"https://docs.nervos.org/"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken Basics"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://talk.nervos.org/t/introducing-godwoken-a-missing-piece-of-the-cell-model/4464?_360safeparam=13594453"},"Introducing Godwoken - A missing piece of the cell model")),Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://medium.com/nervosnetwork/towards-ckb-style-lego-pieces-polyjuice-on-godwoken-cbc935d77abf"},"Towards CKB style Lego pieces: Polyjuice on Godwoken"))))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Source","\xa0","Code"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/nervosnetwork/lumos"},"https://github.com/nervosnetwork/lumos"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken-Kicker"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/RetricSu/godwoken-kicker"},"Godwoken-Kicker: one line command to start godwoken-polyjuice chain"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken Testnet"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/jjyr/godwoken-testnet"},"Godwoken Testnet"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Ethereum RPC (web3 RPC)"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://geth.ethereum.org/docs/rpc/server"},"Ethereum RPC (web3 RPC)"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Gitcoin Hackathon"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://github.com/Kuzirashi/gw-gitcoin-instruction"},"Godwoken Gitcoin Instruction")),Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://gitcoin.co/hackathon/nervos/onboard"},"NERVOS - BROADEN THE SPECTRUM"))))))))}u.isMDXComponent=!0}}]);