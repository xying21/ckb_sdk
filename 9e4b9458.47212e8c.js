(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{119:function(e,t,n){"use strict";var a=n(0),o=n.n(a),l=n(116),c=n(101),r=n(63),i=n.n(r),b=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,r=e.defaultValue,s=e.values,d=e.groupId,m=e.className,u=Object(l.a)(),j=u.tabGroupChoices,h=u.setTabGroupChoices,O=Object(a.useState)(r),g=O[0],N=O[1],k=a.Children.toArray(e.children);if(null!=d){var w=j[d];null!=w&&w!==g&&s.some((function(e){return e.value===w}))&&N(w)}var f=function(e){N(e),null!=d&&h(d,e)},y=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},m)},s.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(c.a)("tabs__item",i.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(y,e.target,e)},onFocus:function(){return f(t)},onClick:function(){f(t)}},n)}))),t?Object(a.cloneElement)(k.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},120:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return o.a.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return u}));var a=n(3),o=n(7),l=(n(0),n(104)),c=n(105),r=n(119),i=n(120),b=["components"],p={id:"polyjuice",title:"Polyjuice",sidebar_label:"Polyjuice"},s={unversionedId:"introduction/polyjuice",id:"introduction/polyjuice",isDocsHomePage:!1,title:"Polyjuice",description:"Overview",source:"@site/docs\\introduction\\overview.md",slug:"/introduction/polyjuice",permalink:"/ckb_sdk/docs/introduction/polyjuice",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/introduction/overview.md",version:"current",sidebar_label:"Polyjuice",sidebar:"sidebar2",previous:{title:"ckb-sdk-java",permalink:"/ckb_sdk/docs/introduction/overview_java"}},d=[{value:"Overview",id:"overview",children:[{value:"Polyjuice Networks",id:"polyjuice-networks",children:[]}]},{value:"Deployment",id:"deployment",children:[{value:"Deploy a Polyjuice Network by Using Godwoken-Kicker",id:"deploy-a-polyjuice-network-by-using-godwoken-kicker",children:[]},{value:"Deploy a Polyjuice Network Manually",id:"deploy-a-polyjuice-network-manually",children:[]}]},{value:"How to Use Polyjuice",id:"how-to-use-polyjuice",children:[{value:"Workflow",id:"workflow",children:[]},{value:"RPC Documentation for Reference",id:"rpc-documentation-for-reference",children:[]},{value:"An Example of Deploying an Ethereum DApp to Polyjuice by Godwoken-Kicker",id:"an-example-of-deploying-an-ethereum-dapp-to-polyjuice-by-godwoken-kicker",children:[]}]},{value:"Project Examples",id:"project-examples",children:[]},{value:"Decentralization Roadmap",id:"decentralization-roadmap",children:[]},{value:"References",id:"references",children:[]}],m={toc:d};function u(e){var t=e.components,n=Object(o.a)(e,b);return Object(l.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"overview"},"Overview"),Object(l.b)("p",null,"Polyjuice is an Ethereum abstraction layer that exposes an account model on top of the cell model of CKB. When Polyjuice is deployed with ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken"},"Godwoken"),", it supports to deploy Ethereum DApps to CKB."),Object(l.b)("p",null,"Godwoken is a layer 2 rollup framework that provides an abstracted account model and layer 2 transactions for Nervos CKB. "," "),Object(l.b)("img",{src:Object(c.a)("img/arch.png"),width:"40%"}),Object(l.b)("p",null,"Figure 1. Architecture for Polyjuice Deployed with Godwoken"),Object(l.b)("h3",{id:"polyjuice-networks"},"Polyjuice Networks"),Object(l.b)("p",null,"To deploy an Ethereum DApp to Polyjuice, the following Polyjuice networks can be used:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Network Name"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Polyjuice","\xa0","Testnet")),Object(l.b)("td",{parentName:"tr",align:null},"RPC URL: ",Object(l.b)("a",{parentName:"td",href:"https://godwoken-testnet-web3-rpc.ckbapp.dev/"},"https://godwoken-testnet-web3-rpc.ckbapp.dev/"),Object(l.b)("br",null),"Chain ID: 71393",Object(l.b)("br",null))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Polyjuice","\xa0","Mainnet")),Object(l.b)("td",{parentName:"tr",align:null},"Todo")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Local","\xa0","Polyjuice","\xa0","Network")),Object(l.b)("td",{parentName:"tr",align:null},"A local Polyjuice network can be deployed by one of the following deployment methods to fulfill different deployment requirements:",Object(l.b)("br",null),Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("p",null,"Deploy a Polyjuice network by using Godwoken-kicker."),Object(l.b)("p",null,"Godwoken-kicker is a one line command to start a Polyjuice network on ",Object(l.b)("strong",{parentName:"td"},"Devnet"),". This deployment method helps developers deploy Ethereum contracts and migrate Ethereum DApps to CKB Devnet quickly in testing and development environments."),Object(l.b)("p",null,"RPC URL: http://localhost:8024",Object(l.b)("br",null),"Chain ID: 1024777",Object(l.b)("br",null))),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy a Polyjuice network manually."),Object(l.b)("p",null,"This deployment method is useful in situations such as deploying a Polyjuice network on ",Object(l.b)("b",null,"Testnet")," or ",Object(l.b)("b",null,"Mainnet"),"."))))))),Object(l.b)("h2",{id:"deployment"},"Deployment"),Object(l.b)("h3",{id:"deploy-a-polyjuice-network-by-using-godwoken-kicker"},"Deploy a Polyjuice Network by Using Godwoken-Kicker"),Object(l.b)("p",null,"Godwoken-kicker provides a quick mode and a custom mode for the deployment."),Object(l.b)(r.a,{defaultValue:"quick",values:[{label:"Quick Mode",value:"quick"},{label:"Custom Mode",value:"custom"}],mdxType:"Tabs"},Object(l.b)(i.a,{value:"quick",mdxType:"TabItem"},Object(l.b)("p",null,"The quick mode is fast and simple. It executes the builds of all components from prebuilt docker images."),Object(l.b)("b",null,"Environment"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,"Ubuntu 20.04 LTS"))),Object(l.b)("b",null,"Prerequisites"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/engine/install/ubuntu/"},"Docker\xa0Engine")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/compose/install/"},"Docker\xa0Compose")))),Object(l.b)("p",null,Object(l.b)("b",null,"Steps")),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Clone the source of Godwoken-kicker."),Object(l.b)("p",null,"If the source is already cloned, skip this step and go to the next step directly."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/RetricSu/godwoken-kicker.git\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Initialize Godwoken-kicker."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Stop any running the Polyjuice network by using the ",Object(l.b)("code",null,"make stop")," command before initializing Godwoken-kicker. "))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-kicker\n$ make init\n")),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make init")," command can be used in the following situations:"),Object(l.b)("ul",null,Object(l.b)("li",null,"It is the first time to start the chain."),Object(l.b)("li",null,"The deployment mode is changed."),Object(l.b)("li",null,"The CKB chain data and all layer 1 related cache data are deleted."))),Object(l.b)("li",null,Object(l.b)("p",null,"Start the Polyjuice network."),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make start")," command can be used to start the deployed Polyjuice network. If there is no Polyjuice network deployed, the ",Object(l.b)("code",null,"make start-f")," command can be used for a force start that deploys and starts a new Polyjuice network."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make start\n")),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"  Do note that after running ",Object(l.b)("code",null,"make clean"),", run ",Object(l.b)("code",null,"make init")," again if a reboot is desired. "))),Object(l.b)("details",null,Object(l.b)("summary",null,"Output"),Object(l.b)("p",null,Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"Building ckb\nBuilding polyjuice\nBuilding call-polyman\nBuilding godwoken\nBuilding web3\nStarting docker_postgres_1 ... done\nStarting docker_ckb_1      ... done\nStarting docker_polyjuice_1    ... done\nStarting docker_call-polyman_1 ... done\nStarting docker_indexer_1      ... done\nStarting docker_godwoken_1     ... done\nStarting docker_web3_1         ... done\n\nRun commands to monitor background activities: \n\n    make sg (Godwoken)\n    make sp (Polyjuice)\n    make web3 (web3)\n    make call-polyman (setup service)\n\nAll Jobs Done       : [########################################] 100%\n\nGreat! Checkout http://localhost:6100 to deploy contract!\n"))))),Object(l.b)("li",null,Object(l.b)("p",null,"Set up an Ethereum wallet."),Object(l.b)("p",null,"In this example, a MetaMask (an Ethereum Wallet) wallet is set up for the deployment. Add the MetaMask extension in the browser (Firefox, Google Chrome, Brave or Microsoft Edge.) and create an account for the wallet."),Object(l.b)("p",null,"If there is a MetaMask wallet ready to be used, skip this step and go to the next step directly.")),Object(l.b)("li",null,Object(l.b)("p",null,"When the Polyjuice network is started successfully, open the website at ",Object(l.b)("a",null,"http://localhost:6100")," and connect the MetaMask wallet by clicking the ",Object(l.b)("b",null,"Connect Wallet")," button."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  RPC URL=http://localhost:8024\n  CHAIN ID=1024777\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy an ETH contract to the Polyjuice network."),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Prepare and compile an ETH contract.")),Object(l.b)("li",null,"Deposit 400 CKB to the ETH wallet on the ",Object(l.b)("b",null,"ACCOUNTS")," page of the Polyjuice network."),Object(l.b)("li",null,"Deploy the ETH contract that you have compiled on the ",Object(l.b)("b",null,"CONTRACT")," page of the Polyjuice network."))))),Object(l.b)(i.a,{value:"custom",mdxType:"TabItem"},Object(l.b)("p",null,"The custom mode is more flexible for custom requirements. It can build the components from local packages and executes the builds locally."),Object(l.b)("b",null,"Environment"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,"Ubuntu 20.04 LTS"))),Object(l.b)("b",null,"Prerequisites"),Object(l.b)("p",null,Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/engine/install/ubuntu/"},"Docker Engine")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://docs.docker.com/compose/install/"},"Docker Compose")),Object(l.b)("li",null,Object(l.b)("a",{href:"https://github.com/nervosnetwork/molecule"},"Moleculec")),Object(l.b)("li",null,"Rustup nightly"))),Object(l.b)("p",null,Object(l.b)("b",null,"Steps")),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Clone the source of Godwoken-kicker."),Object(l.b)("p",null,"If the source is already cloned, skip this step and go to the next step directly."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/RetricSu/godwoken-kicker.git\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Set the mode with ",Object(l.b)("code",null,"true")," under the ",Object(l.b)("code",null,"[mode]")," section in the ",Object(l.b)("code",null,"/docker/.build.mode.env")," file for the components that you want to build from local packages."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:'language-title="/docker/.build.mode.env"'},"####[mode]\nMANUAL_BUILD_GODWOKEN=false\nMANUAL_BUILD_WEB3=false\nMANUAL_BUILD_SCRIPTS=false\nMANUAL_BUILD_POLYJUICE=false\n...\n")),Object(l.b)("p",null,"(Optional) Configure component version under the ",Object(l.b)("code",null,"[packages]")," section in the ",Object(l.b)("code",null,"docker/.build.mode.env")," file."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:'language-title="/docker/.build.mode.env"'},"####[packages]\nGODWOKEN_GIT_URL=https://github.com/nervosnetwork/godwoken.git\nGODWOKEN_GIT_CHECKOUT=master\nPOLYMAN_GIT_URL=https://github.com/RetricSu/godwoken-polyman.git\nPOLYMAN_GIT_CHECKOUT=master\nWEB3_GIT_URL=https://github.com/nervosnetwork/godwoken-web3.git\nWEB3_GIT_CHECKOUT=main\n...\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Initialize Godwoken-kicker."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Stop any running the Polyjuice network by using the ",Object(l.b)("code",null,"make stop")," command before initializing Godwoken-kicker."))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-kicker\n$ make init\n")),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make init")," command can be used in the following situations:"),Object(l.b)("ul",null,Object(l.b)("li",null,"It is the first time to start the chain."),Object(l.b)("li",null,"The deployment mode is changed."),Object(l.b)("li",null,"The CKB chain data and all layer 1 related cache data are deleted."))),Object(l.b)("li",null,Object(l.b)("p",null,"Start the Polyjuice network."),Object(l.b)("p",null,"The ",Object(l.b)("code",null,"make start")," command can be used to start the deployed Polyjuice network. If there is no Polyjuice network deployed, the ",Object(l.b)("code",null,"make start -f")," command can be used for a force start that deploys and starts a new Polyjuice network."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ make start\n")),Object(l.b)("details",null,Object(l.b)("summary",null,"Output"),Object(l.b)("p",null,Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"Building ckb\nBuilding polyjuice\nBuilding call-polyman\nBuilding godwoken\nBuilding web3\nStarting docker_postgres_1 ... done\nStarting docker_ckb_1      ... done\nStarting docker_polyjuice_1    ... done\nStarting docker_call-polyman_1 ... done\nStarting docker_indexer_1      ... done\nStarting docker_godwoken_1     ... done\nStarting docker_web3_1         ... done\n\nRun commands to monitor background activities: \n\n    make sg (Godwoken)\n    make sp (Polyjuice)\n    make web3 (web3)\n    make call-polyman (setup service)\n\nAll Jobs Done       : [########################################] 100%\n\nGreat! Checkout http://localhost:6100 to deploy contract!\n"))))),Object(l.b)("li",null,Object(l.b)("p",null,"Set up an Ethereum wallet."),Object(l.b)("p",null,"In this example, a MetaMask (an Ethereum Wallet) wallet is set up for the deployment. Add the MetaMask extension in the browser (Firefox, Google Chrome, Brave or Microsoft Edge.) and create an account for the wallet."),Object(l.b)("p",null,"If there is a MetaMask wallet ready to be used, skip this step and go to the next step directly.")),Object(l.b)("li",null,Object(l.b)("p",null,"When the Polyjuice network is started successfully, open the website at ",Object(l.b)("a",null,"http://localhost:6100")," and connect the MetaMask wallet by clicking the ",Object(l.b)("b",null,"Connect Wallet")," button."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  RPC URL=http://localhost:8024\n  CHAIN ID=1024777\n"))),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy an ETH contract to the Polyjuice network."),Object(l.b)("ol",null,Object(l.b)("li",null,Object(l.b)("p",null,"Prepare and compile an ETH contract.")),Object(l.b)("li",null,Object(l.b)("p",null,"Deposit 400 CKB to the ETH wallet on the ",Object(l.b)("b",null,"ACCOUNTS")," page of the Polyjuice network.")),Object(l.b)("li",null,Object(l.b)("p",null,"Deploy the ETH contract that you have compiled on the ",Object(l.b)("b",null,"CONTRACT")," page of the Polyjuice network."))))))),Object(l.b)("p",null,"For more information about the Godwoken-kicker commands, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/RetricSu/godwoken-kicker"},"godwoken-kicker"),"."),Object(l.b)("h3",{id:"deploy-a-polyjuice-network-manually"},"Deploy a Polyjuice Network Manually"),Object(l.b)("h4",{id:"environment"},"Environment"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"OS: Ubuntu 20.04")),Object(l.b)("h4",{id:"prerequisites"},"Prerequisites"),Object(l.b)("p",null,"The following tools need to be installed before entering the deployment process:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Yarn (version 1.22.5 or above)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"GCC and make"),Object(l.b)("p",{parentName:"li"},"To install ",Object(l.b)("inlineCode",{parentName:"p"},"GCC")," and ",Object(l.b)("inlineCode",{parentName:"p"},"make")," on Ubuntu 20.04, run the following command as root or user with sudo privileges:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt update\n$ sudo apt install build-essential\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/capsule/releases/tag/v0.4.6"},"Capsule v0.4.6"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Rustc nightly v1.54.0")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/molecule"},"Moleculec v0.7.2")),Object(l.b)("p",{parentName:"li"},"To install Moleculec:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cargo install moleculec\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Docker"),Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Docker")," must be installed for building and deploying Godwoken. For more information about Docker installation, see ",Object(l.b)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/ubuntu/"},"Install Docker Engine on Ubuntu"),"."),Object(l.b)("p",{parentName:"li"},"To manage Docker as a non-root user, see the Docker documentations of ",Object(l.b)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/"},"Manage Docker as a non-root user"),"."),Object(l.b)("p",{parentName:"li"},"For more information about the tags of the pre-buildt docker image, see ",Object(l.b)("a",{parentName:"p",href:"https://hub.docker.com/r/nervos/godwoken-prebuilds/tags?page=1&ordering=last_updated."},"nervos/godwoken-prebuilds")," ")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/tippy/releases"},"Tippy")),Object(l.b)("p",{parentName:"li"},"Tippy is a tool to help set up and manage CKB nodes. For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/reference/ckbnode#install-a-ckb-node-by-using-tippy"},"Install a CKB Node by Using Tippy"),". The verified Tippy version in this documentation is ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/tippy/releases/tag/v0.3.2"},"v0.3.2"),".")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"ckb-cli: The ckb-cli tool is used for deploying smart contracts. It can be installed from a ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases"},"CKB prebuilt installer package"),". The verified ckb-cli version in this documentation is ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases/tag/v0.42.0"},"v0.42.0"),"."))),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The current user must have permissions to run ckb-cli, Capsule, Moleculec and docker. If the execution of these tools requires sudo commands, that may cause issues during the deployment process."))),Object(l.b)("h4",{id:"steps"},"Steps"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create a CKB account for the deployment."),Object(l.b)("p",{parentName:"li"},"The account must have enough CKB capacity for the deployment.  For more information about CKB accounts and creating CKB accounts, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/reference/ckbaccount"},"CKB Accounts and Capacity"),"."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"address:\n  mainnet: ckb1qyqpadsep7yruydz5eaulty4xwc2sn6smhashalnjx\n  testnet: ckt1qyqpadsep7yruydz5eaulty4xwc2sn6smhas2cpv76\nlock_arg: 0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb\nlock_hash: 0x499aa230ded32812a246778bc718f4d61a47497c1b7352211d241d2ad333ed75\npk: 0xca02cc4b8e0e447e243204dd2e16a1692026bfdd4add502b203975999d3a6909\n")),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The account information in this documentation is only used for demonstration. Do ",Object(l.b)("strong",{parentName:"p"},"not")," use these private keys, addresses and args elsewhere.")))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the CKB node and the CKB miner."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Launch the Tippy dashboard."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd tippy-linux-x64\n$ ./Tippy\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the CKB node and the CKB miner on the Tippy dashboard.")))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone the Godwoken source."),Object(l.b)("p",{parentName:"li"},"Open a new terminal window and run the following command to clone the Godwoken source:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone --recursive https://github.com/nervosnetwork/godwoken\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Prepare a ",Object(l.b)("inlineCode",{parentName:"p"},"pk")," file and a ",Object(l.b)("inlineCode",{parentName:"p"},"scripts-build.json")," file under the ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy")," folder."),Object(l.b)("p",{parentName:"li"},"The ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/pk")," file stores the private key that is used to deploy Godwoken."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:'language-title="/godwoken/deploy/pk"'},"0xca02cc4b8e0e447e243204dd2e16a1692026bfdd4add502b203975999d3a6909\n")),Object(l.b)("p",{parentName:"li"},"The ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/scripts-build.json")," file specifies the pre-built docker image of Godwoken and the repositories of the other components like godwoken_scripts, godwoken_polyjuice and clerkb."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="/godwoken/deploy/scripts-build.json"',title:'"/godwoken/deploy/scripts-build.json"'},'{\n    "prebuild_image": "nervos/godwoken-prebuilds:<tag>",\n    "repos": {\n        "godwoken_scripts": "https://github.com/nervosnetwork/godwoken-scripts#master",\n        "godwoken_polyjuice": "https://github.com/nervosnetwork/godwoken-polyjuice#main",\n        "clerkb": "https://github.com/nervosnetwork/clerkb#v0.4.0"\n    }\n}\n')),Object(l.b)("p",{parentName:"li"},"For more information about the tags of the pre-buildt docker image, see ",Object(l.b)("a",{parentName:"p",href:"https://hub.docker.com/r/nervos/godwoken-prebuilds/tags?page=1&ordering=last_updated"},"https://hub.docker.com/r/nervos/godwoken-prebuilds/tags?page=1&ordering=last_updated"),"."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="/godwoken/deploy/scripts-build.json"',title:'"/godwoken/deploy/scripts-build.json"'},'{\n    "prebuild_image": "nervos/godwoken-prebuilds:v0.6.1",\n    "repos": {\n        "godwoken_scripts": "https://github.com/nervosnetwork/godwoken-scripts#master",\n        "godwoken_polyjuice": "https://github.com/nervosnetwork/godwoken-polyjuice#main",\n        "clerkb": "https://github.com/nervosnetwork/clerkb#v0.4.0"\n    }\n} \n'))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set up Godwoken nodes."),Object(l.b)("p",{parentName:"li"},"The setup command for setting up Godwoken nodes is as follows:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ RUST_LOG=info cargo +nightly run --bin gw-tools -- setup --cells-lock-address <CKB-address> -s deploy/scripts-build.json -k deploy/pk -o deploy/\n")),Object(l.b)("p",{parentName:"li"},"To set up Godwoken nodes with the CKB address of the deployment cells owner: "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken\n$ RUST_LOG=info cargo +nightly run --bin gw-tools -- setup --cells-lock-address ckt1qyqpadsep7yruydz5eaulty4xwc2sn6smhas2cpv76 -s deploy/scripts-build.json -k deploy/pk -o deploy/\n")),Object(l.b)("p",{parentName:"li"},"This setup command compiles Godwoken scripts, deploys the scripts and layer 2 genesis blocks, and generates configuration files. "),Object(l.b)("p",{parentName:"li"},"After the setup command is completed, a ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," file is generated under ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/node1")," and ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy/node2"),", and a ",Object(l.b)("inlineCode",{parentName:"p"},"scripts-deploy-result.json")," file is generated under ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken/deploy"),"."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"If an error about failing to obtain the ",Object(l.b)("a",{href:"https://raw.githubusercontent.com/nervosnetwork/godwoken/2221efdfcf06351fa1884ea0f2df1604790c3378/crates/types/schemas/godwoken.mol"},"\xa0godwoken.mol")," and ",Object(l.b)("a",{href:"https://raw.githubusercontent.com/nervosnetwork/godwoken/2221efdfcf06351fa1884ea0f2df1604790c3378/crates/types/schemas/blockchain.mol"},"blockchain.mol")," file is encountered during the setup process, try the following workaround to fix the error:"),Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("p",null,"Comment the lines for downloading ",Object(l.b)("code",null,"blockchain.mol")," and ",Object(l.b)("code",null,"godwoken.mol")," in the ",Object(l.b)("code",null,"/godwoken/tmp/scripts-build-dir/godwoken-polyjuice/Makefile")," file.")),Object(l.b)("li",null,Object(l.b)("p",null,"Download the two files manually and copy the files into the ",Object(l.b)("code",null,"/godwoken/tmp/scripts-build-dir/godwoken-polyjuice/build")," folder.")),Object(l.b)("li",null,Object(l.b)("p",null,"Execute the setup command again until it succeeds.")))))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Configure the receiver lock."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Generate the config.json file for the CKB chain."),Object(l.b)("p",{parentName:"li"},"Download the config generator tool, ",Object(l.b)("a",{parentName:"p",href:"https://github.com/classicalliu/lumos-config-generator/releases/download/v0.1.1/lumos-config-generator-linux-amd64"},"lumos-config-generator-linux-amd64")," for Linux platforms."),Object(l.b)("p",{parentName:"li"},"Run the ",Object(l.b)("strong",{parentName:"p"},"lumos-config-generator-linux-amd64")," file to generate the config.json file in the project root directory."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The CKB node must be running when executing the generator to generate the config file."))),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ ./lumos-config-generator-linux-amd64 config.json http://127.0.0.1:8114\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Assign a receiver lock in the node's ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," file. "),Object(l.b)("p",{parentName:"li"},"The code_hash of the receiver lock is the CODE_HASH of the SECP256K1_BLAKE160 script from the config.json file."),Object(l.b)("p",{parentName:"li"},"The args is the lock args of the deployment cells owner."),Object(l.b)("p",{parentName:"li"},"Example:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-toml",metastring:'title="config.toml"',title:'"config.toml"'},"[block_producer.challenger_config.rewards_receiver_lock]\ncode_hash = '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8'\nhash_type = 'type'\nargs = '0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb'\n"))))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the Godwoken nodes."),Object(l.b)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The default node mode is ",Object(l.b)("inlineCode",{parentName:"p"},"readonly "),". It can be modified in ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," to either ",Object(l.b)("inlineCode",{parentName:"p"},"fullnode")," mode or ",Object(l.b)("inlineCode",{parentName:"p"},"test")," mode."),Object(l.b)("p",{parentName:"div"},"If the two readonly nodes need to be started within the same environment, manually modify the listening port number in the ",Object(l.b)("inlineCode",{parentName:"p"},"config.toml")," file for each node."))),Object(l.b)("p",{parentName:"li"},"Run the following command to start node1:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ RUST_LOG=info cargo +nightly run --bin godwoken run -c deploy/node1/config.toml\n")),Object(l.b)("p",{parentName:"li"},"If an error about the use of unstable library feature is encountered during the process, try the following commands to fix the issue:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cargo install cargo-edit\n$ cargo upgrade --workspace num-bigint\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set up Polyjuice."),Object(l.b)("p",{parentName:"li"},"Clone the source of godwoken-examples. For more information, see ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-examples"},"godwoken-examples"),"."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone --recursive https://github.com/nervosnetwork/godwoken-examples\n")),Object(l.b)("p",{parentName:"li"},"Then, create an account on Polyjuice. It will take some time to build index for the first time. "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-examples\n$ yarn && yarn run build-all\n# export SCRIPT_DEPLOY_RESULT_PATH=<Path to scripts-deploy-result.json>\n$ export SCRIPT_DEPLOY_RESULT_PATH=~/godwoken/deploy/scripts-deploy-result.json\n# export GODWOKEN_CONFIG_PATH=<Path to godwoken config.toml>\n$ export GODWOKEN_CONFIG_PATH=~/godwoken/deploy/node1/config.toml\n$ yarn run copy-configs\n# LUMOS_CONFIG_FILE=<Path to config.json> node ./packages/tools/lib/account-cli.js deposit -c 40000000000 -p <privkey>\n$ LUMOS_CONFIG_FILE=~/config.json node ./packages/tools/lib/account-cli.js deposit -c 40000000000 -p 0xca02cc4b8e0e447e243204dd2e16a1692026bfdd4add502b203975999d3a6909\n")),Object(l.b)("p",{parentName:"li"},"For more information about generating the Lumos config file for DEV chain, see ",Object(l.b)("a",{parentName:"p",href:"https://cryptape.github.io/lumos-doc/docs/guides/config#step-1-generate-the-configjson-file-for-the-dev-chain"},"Generate the config.json file for the DEV chain"),".")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the web3 server."),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create a PostgreSQL instance."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ docker run --name postgres -e POSTGRES_USER=user -e POSTGRES_DB=godwoken -e POSTGRES_PASSWORD=mypassword -d -p 5432:5432 postgres\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone the source of ",Object(l.b)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-web3"},"godwoken-web3")," that is a Web3 RPC compatible layer build upon Godwoken and Polyjuice."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/nervosnetwork/godwoken-web3\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Prepare the ",Object(l.b)("inlineCode",{parentName:"p"},".env")," file under ",Object(l.b)("inlineCode",{parentName:"p"},"/godwoken-web3/packages/api-server"),"."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ cd godwoken-web3\n$ cat > ./packages/api-server/.env <<EOF\nDATABASE_URL=postgres://user:password@postgres:5432/godwoken\nGODWOKEN_JSON_RPC=http://godwoken:8119\nETH_ACCOUNT_LOCK_HASH=<Eth Account Lock Code Hash>\nROLLUP_TYPE_HASH=<Rollup Type Hash>\nPORT=8024\nCHAIN_ID=1024777\nCREATOR_ACCOUNT_ID=3\nDEFAULT_FROM_ADDRESS=0x1eb6190f883e11a2a67bcfac9533b0a84f50ddfb\nPOLYJUICE_VALIDATOR_TYPE_HASH=<Polyjuice Validator Code Hash>\nL2_SUDT_VALIDATOR_SCRIPT_TYPE_HASH=<L2 Sudt Validator Code Hash>\nTRON_ACCOUNT_LOCK_HASH=<Tron Account Lock Code Hash>\nEOF\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Start the Web3 server."),Object(l.b)("p",{parentName:"li"},"To start the Web3 server properly, make sure to clear the postgres database, and then run the migration SQL file to recreate the tables before running the server:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ yarn\n$ yarn run migrate:latest\n$ yarn run build:godwoken\n$ yarn run start\n")))))),Object(l.b)("h2",{id:"how-to-use-polyjuice"},"How to Use Polyjuice"),Object(l.b)("h3",{id:"workflow"},"Workflow"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Setup the environment.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Choose Polyjuice testnet or mainnet network or deploy a local Polyjuice network."),Object(l.b)("p",{parentName:"li"},"For more information about Polyjuice network, see ",Object(l.b)("a",{parentName:"p",href:"../introduction/polyjuice#polyjuice-networks"},"Polyjuice network"),"."),Object(l.b)("p",{parentName:"li"},"For more information about deploying a Polyjuice network, see the sections of Deployment.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Deploy an Ethereum DApp to Polyjuice."))),Object(l.b)("h3",{id:"rpc-documentation-for-reference"},"RPC Documentation for Reference"),Object(l.b)("p",null,"Todo"),Object(l.b)("h3",{id:"an-example-of-deploying-an-ethereum-dapp-to-polyjuice-by-godwoken-kicker"},"An Example of Deploying an Ethereum DApp to Polyjuice by Godwoken-Kicker"),Object(l.b)("h4",{id:"environment-1"},"Environment"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Ubuntu 20.04")),Object(l.b)("h4",{id:"prerequisite-development-software"},"Prerequisite Development Software"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Node.js v14"),Object(l.b)("li",{parentName:"ul"},"Yarn "),Object(l.b)("li",{parentName:"ul"},"Docker"),Object(l.b)("li",{parentName:"ul"},"Docker-compose"),Object(l.b)("li",{parentName:"ul"},"Rust")),Object(l.b)("h4",{id:"prerequisite-wallet-software"},"Prerequisite Wallet Software"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"MetaMask")),Object(l.b)("h4",{id:"steps-1"},"Steps"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Clone an Existing ETH DApp."),Object(l.b)("p",{parentName:"li"},"Create a relative directory, if needed, then enter the directory and clone the repository . "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ mkdir -p ~/projects\n$ cd ~/projects\n$ git clone https://github.com/TTNguyenDev/Dapps-Support-ForceBridge -b starter\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Run the ETH DApp.\nInstall the dependencies and  build the smart contracts. Start Ganache to run a local Ethereum development chain."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge\n$ yarn && yarn build && yarn start:ganache\n")),Object(l.b)("p",{parentName:"li"},"Open another terminal and start the UI server. "),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge\n$ yarn ui\n")),Object(l.b)("p",{parentName:"li"},"Open a browser tab to http://localhost:3000 to view the DApp after the server started. ")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Setup Godwoken Test in MetaMask."),Object(l.b)("p",{parentName:"li"},"Set up the Metamask extension in browser and setup custom PRC with the following information:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"Network Name: Godwoken Testnet\nNew RPC URL: http://godwoken-testnet-web3-rpc.ckbapp.dev/\nChain ID: 71393\nCurrency Symbol (optional): N/A\nBlock Explorer URL (optional): N/A\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Install Polyjuice Dependencies."),Object(l.b)("p",{parentName:"li"},"To port the Ethereum application with Nervos' Layer 2, first step is to install the dependencies that are necessary for godwoken and polyjuice to work with. "),Object(l.b)("p",{parentName:"li"},"Two dependencies need to be added to allow the existing web3 Dapp to work with the second tier solution Polyjuice: ",Object(l.b)("inlineCode",{parentName:"p"},"@polyjuice-provider/web3")," and ",Object(l.b)("inlineCode",{parentName:"p"},"nervos-godwoken-integration"),"."),Object(l.b)("p",{parentName:"li"},"@polyjuice-provider/web3 is a custom Polyjuice web3 provider used to replace the web3 library, necessary to interact with the Nervos Layer 2 smart contract. Nervos-godwoken-integration is a tool that can generate Polyjuice addresses based on Ethereum addresses."),Object(l.b)("p",{parentName:"li"},"Use the following commands to install both:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge\n$ yarn add @polyjuice-provider/web3@0.0.1-rc7 nervos-godwoken-integration@0.0.6\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Add and Configure the Web3 Provider for the Polyjuice Web3 Provider."),Object(l.b)("p",{parentName:"li"},"Create a new ",Object(l.b)("inlineCode",{parentName:"p"},"config.ts")," file under the ",Object(l.b)("inlineCode",{parentName:"p"},"src"),":"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"$ cd ~/projects/Dapps-Support-ForceBridge/src\n$ touch config.ts\n")),Object(l.b)("p",{parentName:"li"},"then fill it with the values presented:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"export const CONFIG = {\nWEB3_PROVIDER_URL: 'https://godwoken-testnet-web3-rpc.ckbapp.dev'\nROLLUP_TYPE_HASH: '0x4cc2e6526204ae6a2e8fcf12f7ad472f41a1606d5b9624beebd215d780809f6a'\nETH_ACCOUNT_LOCK_CODE_HASH: '0xdeec13a7b8e100579541384ccaf4b5223733e4a5483c3aec95ddc4c1d5ea5b22'\n}\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Update the UI file\nUpdate the main UI in the file ",Object(l.b)("inlineCode",{parentName:"p"},"~/projects/blockchain-workshop-ethereum-simple/src/ui/app.tsx"),". Add the following lines in the main dependency importation section of the file:"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"import { PolyjuiceHttpProvider } from '@polyjuice-provider/web3';\n\nimport { AddressTranslator } from 'nervos-godwoken-integration';\n\nimport { CONFIG } from '../config';\n")),Object(l.b)("p",{parentName:"li"},"Find and replace line."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"const web3 = new Web3((window as any).ethereum);\n")),Object(l.b)("p",{parentName:"li"}," to"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},"const godwokenRpcUrl = CONFIG.WEB3_PROVIDER_URL;\nconst providerConfig = {\nrollupTypeHash: CONFIG.ROLLUP_TYPE_HASH,\nethAccountLockCodeHash: CONFIG.ETH_ACCOUNT_LOCK_CODE_HASH,\nweb3Url: godwokenRpcUrl\n};\nconst provider = new PolyjuiceHttpProvider(godwokenRpcUrl, providerConfig);\nconst web3 = new Web3(provider);\n"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Set Gas Limit Higher."),Object(l.b)("p",{parentName:"li"},"Godwoken Testnet requires a higher gas limit to be set for transactions."),Object(l.b)("p",{parentName:"li"},"Open the ",Object(l.b)("inlineCode",{parentName:"p"},"TTNguyenToken.ts ")," file:"))),Object(l.b)("h2",{id:"project-examples"},"Project Examples"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/TTNguyenDev/Hackathon-Nervos/tree/main/task_12#document-porting-an-existing-ethereum-dapp-to-polyjuice"},"Porting an Existing Ethereum DApp to Polyjuice"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/Kuzirashi/blockchain-workshop/tree/godwoken-simple"},"godwoken-simple"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/Kuzirashi/blockchain-workshop/tree/godwoken-simple-js"},"godwoken-simple-js"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/YokaiSwap"},"YokaiSwap")))),Object(l.b)("h2",{id:"decentralization-roadmap"},"Decentralization Roadmap"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 1"),": The sequencer is the only validator. Godwoken supports to view rollups and find out whether there is any invalid commit in a rollup.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 2"),": Godwoken will introduce permission-less validators. Then, everyone can run a validator to view rollups. If the sequencer commits an invalid state, a challenge will be processed, and the sequencer will lose staked assets on layer1. If the sequencer stops working, everyone can run a block producer to process the withdrawal from the rollup."),Object(l.b)("p",{parentName:"li"},"The target of stage 2 is to reach the same decentralization level as popular rollup projects such as Arbitrum.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Stage 3"),": Multiple sequencers will be investigated and explored."))),Object(l.b)("h2",{id:"references"},"References"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Resource"),Object(l.b)("th",{parentName:"tr",align:null},"Link"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Nervos","\xa0","Document","\xa0","Website"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://docs.nervos.org/"},"https://docs.nervos.org/"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken Basics"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://talk.nervos.org/t/introducing-godwoken-a-missing-piece-of-the-cell-model/4464?_360safeparam=13594453"},"Introducing Godwoken - A missing piece of the cell model")),Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://medium.com/nervosnetwork/towards-ckb-style-lego-pieces-polyjuice-on-godwoken-cbc935d77abf"},"Towards CKB style Lego pieces: Polyjuice on Godwoken"))))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Source","\xa0","Code"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/nervosnetwork/lumos"},"https://github.com/nervosnetwork/lumos"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken-Kicker"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/RetricSu/godwoken-kicker"},"Godwoken-Kicker: one line command to start godwoken-polyjuice chain"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Godwoken Testnet"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://github.com/jjyr/godwoken-testnet"},"Godwoken Testnet"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Ethereum RPC (web3 RPC)"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"https://geth.ethereum.org/docs/rpc/server"},"Ethereum RPC (web3 RPC)"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Gitcoin Hackathon"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://github.com/Kuzirashi/gw-gitcoin-instruction"},"Godwoken Gitcoin Instruction")),Object(l.b)("li",null,Object(l.b)("a",{parentName:"td",href:"https://gitcoin.co/hackathon/nervos/onboard"},"NERVOS - BROADEN THE SPECTRUM"))))))))}u.isMDXComponent=!0}}]);